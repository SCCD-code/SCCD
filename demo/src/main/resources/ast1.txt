sourceUnit
pragmaDirective importDirective contractDefinition pragmaDirective contractDefinition pragmaDirective importDirective importDirective importDirective contractDefinition pragmaDirective contractDefinition pragmaDirective importDirective importDirective importDirective contractDefinition pragmaDirective contractDefinition pragmaDirective contractDefinition pragmaDirective contractDefinition pragmaDirective importDirective importDirective importDirective importDirective importDirective importDirective importDirective importDirective importDirective importDirective importDirective contractDefinition pragmaDirective contractDefinition pragmaDirective contractDefinition pragmaDirective contractDefinition pragmaDirective contractDefinition <EOF> 
pragma pragmaName pragmaValue ; import "../utils/Context.sol" ; abstract contract identifier is inheritanceSpecifier { contractPart contractPart contractPart contractPart contractPart contractPart contractPart } pragma pragmaName pragmaValue ; library identifier { contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart } pragma pragmaName pragmaValue ; import "../../utils/Context.sol" ; import "./IERC20.sol" ; import "../../math/SafeMath.sol" ; contract identifier is inheritanceSpecifier , inheritanceSpecifier { contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart } pragma pragmaName pragmaValue ; interface identifier { contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart } pragma pragmaName pragmaValue ; import "./IERC20.sol" ; import "../../math/SafeMath.sol" ; import "../../utils/Address.sol" ; library identifier { contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart } pragma pragmaName pragmaValue ; library identifier { contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart } pragma pragmaName pragmaValue ; abstract contract identifier { contractPart contractPart } pragma pragmaName pragmaValue ; interface identifier { contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart } pragma pragmaName pragmaValue ; import "@openzeppelin/contracts/token/ERC20/IERC20.sol" ; import "@openzeppelin/contracts/math/SafeMath.sol" ; import "@openzeppelin/contracts/utils/Address.sol" ; import "@openzeppelin/contracts/token/ERC20/SafeERC20.sol" ; import "@openzeppelin/contracts/token/ERC20/ERC20.sol" ; import "@openzeppelin/contracts/access/Ownable.sol" ; import "../interfaces/IStrategy.sol" ; import "../interfaces/compound/ICEth.sol" ; import "../interfaces/compound/IComptroller.sol" ; import "../interfaces/uniswap/IUniswapV2.sol" ; import "../../interfaces/IWETH.sol" ; contract identifier is inheritanceSpecifier , inheritanceSpecifier { contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart } pragma pragmaName pragmaValue ; interface identifier { contractPart contractPart contractPart contractPart contractPart contractPart contractPart contractPart } pragma pragmaName pragmaValue ; interface identifier { contractPart contractPart contractPart } pragma pragmaName pragmaValue ; interface identifier { contractPart } pragma pragmaName pragmaValue ; interface identifier { contractPart contractPart } 
identifier version Ownable userDefinedTypeName stateVariableDeclaration eventDefinition functionDefinition functionDefinition modifierDefinition functionDefinition functionDefinition identifier version SafeMath functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition identifier version ERC20 userDefinedTypeName userDefinedTypeName usingForDeclaration stateVariableDeclaration stateVariableDeclaration stateVariableDeclaration stateVariableDeclaration stateVariableDeclaration stateVariableDeclaration functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition identifier version IERC20 functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition eventDefinition eventDefinition identifier version SafeERC20 usingForDeclaration usingForDeclaration functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition identifier version Address functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition identifier version Context functionDefinition functionDefinition identifier version IWETH functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition identifier version StrategyCompoundEthLendingPool userDefinedTypeName userDefinedTypeName usingForDeclaration usingForDeclaration usingForDeclaration stateVariableDeclaration stateVariableDeclaration stateVariableDeclaration stateVariableDeclaration stateVariableDeclaration stateVariableDeclaration functionDefinition modifierDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition identifier version IStrategy eventDefinition eventDefinition eventDefinition functionDefinition functionDefinition functionDefinition functionDefinition functionDefinition identifier version ICEth functionDefinition functionDefinition functionDefinition identifier version IComptroller functionDefinition identifier version IUniswapV2 functionDefinition functionDefinition 
solidity versionConstraint versionConstraint identifier typeName private identifier ; event identifier eventParameterList ; functionDescriptor parameterList modifierList block functionDescriptor parameterList modifierList returnParameters block modifier identifier parameterList block functionDescriptor parameterList modifierList block functionDescriptor parameterList modifierList block solidity versionConstraint versionConstraint functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block solidity versionConstraint versionConstraint identifier identifier using identifier for typeName ; typeName private identifier ; typeName private identifier ; typeName private identifier ; typeName private identifier ; typeName private identifier ; typeName private identifier ; functionDescriptor parameterList modifierList block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList block functionDescriptor parameterList modifierList block functionDescriptor parameterList modifierList block functionDescriptor parameterList modifierList block functionDescriptor parameterList modifierList block functionDescriptor parameterList modifierList block solidity versionConstraint versionConstraint functionDescriptor parameterList modifierList returnParameters ; functionDescriptor parameterList modifierList returnParameters ; functionDescriptor parameterList modifierList returnParameters ; functionDescriptor parameterList modifierList returnParameters ; functionDescriptor parameterList modifierList returnParameters ; functionDescriptor parameterList modifierList returnParameters ; event identifier eventParameterList ; event identifier eventParameterList ; solidity versionConstraint versionConstraint using identifier for typeName ; using identifier for typeName ; functionDescriptor parameterList modifierList block functionDescriptor parameterList modifierList block functionDescriptor parameterList modifierList block functionDescriptor parameterList modifierList block functionDescriptor parameterList modifierList block functionDescriptor parameterList modifierList block solidity versionConstraint versionConstraint functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block solidity versionConstraint versionConstraint functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block solidity versionConstraint versionConstraint functionDescriptor parameterList modifierList returnParameters ; functionDescriptor parameterList modifierList returnParameters ; functionDescriptor parameterList modifierList returnParameters ; functionDescriptor parameterList modifierList returnParameters ; functionDescriptor parameterList modifierList returnParameters ; functionDescriptor parameterList modifierList returnParameters ; functionDescriptor parameterList modifierList ; functionDescriptor parameterList modifierList ; solidity versionConstraint versionConstraint identifier identifier using identifier for typeName ; using identifier for typeName ; using identifier for typeName ; typeName public identifier ; typeName public identifier ; typeName public identifier ; typeName public identifier ; typeName public identifier ; typeName public identifier ; functionDescriptor parameterList modifierList block modifier identifier parameterList block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList returnParameters block functionDescriptor parameterList modifierList block functionDescriptor parameterList modifierList block functionDescriptor parameterList modifierList block functionDescriptor parameterList modifierList block functionDescriptor parameterList modifierList block functionDescriptor parameterList modifierList block solidity versionConstraint versionConstraint event identifier eventParameterList ; event identifier eventParameterList ; event identifier eventParameterList ; functionDescriptor parameterList modifierList returnParameters ; functionDescriptor parameterList modifierList ; functionDescriptor parameterList modifierList returnParameters ; functionDescriptor parameterList modifierList ; functionDescriptor parameterList modifierList ; solidity versionConstraint versionConstraint functionDescriptor parameterList modifierList returnParameters ; functionDescriptor parameterList modifierList ; functionDescriptor parameterList modifierList returnParameters ; solidity versionConstraint versionConstraint functionDescriptor parameterList modifierList ; solidity versionConstraint versionConstraint functionDescriptor parameterList modifierList ; functionDescriptor parameterList modifierList ; 
versionOperator 0.6.0 versionOperator 0.8.0 Context elementaryTypeName _owner OwnershipTransferred ( eventParameter , eventParameter ) constructor ( ) internal { statement statement statement } function identifier ( ) public stateMutability virtual returns parameterList { statement } onlyOwner ( ) { statement statement } function identifier ( ) public virtual modifierInvocation { statement statement } function identifier ( parameter ) public virtual modifierInvocation { statement statement statement } versionOperator 0.6.0 versionOperator 0.8.0 function identifier ( parameter , parameter ) internal stateMutability returns parameterList { statement statement statement } function identifier ( parameter , parameter ) internal stateMutability returns parameterList { statement statement } function identifier ( parameter , parameter ) internal stateMutability returns parameterList { statement statement statement statement } function identifier ( parameter , parameter ) internal stateMutability returns parameterList { statement statement } function identifier ( parameter , parameter ) internal stateMutability returns parameterList { statement statement } function identifier ( parameter , parameter ) internal stateMutability returns parameterList { statement statement statement } function identifier ( parameter , parameter ) internal stateMutability returns parameterList { statement statement } function identifier ( parameter , parameter ) internal stateMutability returns parameterList { statement statement statement statement } function identifier ( parameter , parameter ) internal stateMutability returns parameterList { statement statement } function identifier ( parameter , parameter ) internal stateMutability returns parameterList { statement statement } function identifier ( parameter , parameter , parameter ) internal stateMutability returns parameterList { statement statement } function identifier ( parameter , parameter , parameter ) internal stateMutability returns parameterList { statement statement } function identifier ( parameter , parameter , parameter ) internal stateMutability returns parameterList { statement statement } versionOperator 0.6.0 versionOperator 0.8.0 Context IERC20 SafeMath elementaryTypeName mapping _balances mapping _allowances elementaryTypeName _totalSupply elementaryTypeName _name elementaryTypeName _symbol elementaryTypeName _decimals constructor ( parameter , parameter ) public { statement statement statement } function identifier ( ) public stateMutability virtual returns parameterList { statement } function identifier ( ) public stateMutability virtual returns parameterList { statement } function identifier ( ) public stateMutability virtual returns parameterList { statement } function identifier ( ) public stateMutability virtual overrideSpecifier returns parameterList { statement } function identifier ( parameter ) public stateMutability virtual overrideSpecifier returns parameterList { statement } function identifier ( parameter , parameter ) public virtual overrideSpecifier returns parameterList { statement statement } function identifier ( parameter , parameter ) public stateMutability virtual overrideSpecifier returns parameterList { statement } function identifier ( parameter , parameter ) public virtual overrideSpecifier returns parameterList { statement statement } function identifier ( parameter , parameter , parameter ) public virtual overrideSpecifier returns parameterList { statement statement statement } function identifier ( parameter , parameter ) public virtual returns parameterList { statement statement } function identifier ( parameter , parameter ) public virtual returns parameterList { statement statement } function identifier ( parameter , parameter , parameter ) internal virtual { statement statement statement statement statement statement } function identifier ( parameter , parameter ) internal virtual { statement statement statement statement statement } function identifier ( parameter , parameter ) internal virtual { statement statement statement statement statement } function identifier ( parameter , parameter , parameter ) internal virtual { statement statement statement statement } function identifier ( parameter ) internal virtual { statement } function identifier ( parameter , parameter , parameter ) internal virtual { } versionOperator 0.6.0 versionOperator 0.8.0 function identifier ( ) external stateMutability returns parameterList function identifier ( parameter ) external stateMutability returns parameterList function identifier ( parameter , parameter ) external returns parameterList function identifier ( parameter , parameter ) external stateMutability returns parameterList function identifier ( parameter , parameter ) external returns parameterList function identifier ( parameter , parameter , parameter ) external returns parameterList Transfer ( eventParameter , eventParameter , eventParameter ) Approval ( eventParameter , eventParameter , eventParameter ) versionOperator 0.6.0 versionOperator 0.8.0 SafeMath elementaryTypeName Address elementaryTypeName function identifier ( parameter , parameter , parameter ) internal { statement } function identifier ( parameter , parameter , parameter , parameter ) internal { statement } function identifier ( parameter , parameter , parameter ) internal { statement statement } function identifier ( parameter , parameter , parameter ) internal { statement statement } function identifier ( parameter , parameter , parameter ) internal { statement statement } function identifier ( parameter , parameter ) private { statement statement } versionOperator 0.6.2 versionOperator 0.8.0 function identifier ( parameter ) internal stateMutability returns parameterList { statement statement statement } function identifier ( parameter , parameter ) internal { statement statement statement } function identifier ( parameter , parameter ) internal returns parameterList { statement } function identifier ( parameter , parameter , parameter ) internal returns parameterList { statement } function identifier ( parameter , parameter , parameter ) internal returns parameterList { statement } function identifier ( parameter , parameter , parameter , parameter ) internal returns parameterList { statement statement statement statement } function identifier ( parameter , parameter ) internal stateMutability returns parameterList { statement } function identifier ( parameter , parameter , parameter ) internal stateMutability returns parameterList { statement statement statement } function identifier ( parameter , parameter ) internal returns parameterList { statement } function identifier ( parameter , parameter , parameter ) internal returns parameterList { statement statement statement } function identifier ( parameter , parameter , parameter ) private stateMutability returns parameterList { statement } versionOperator 0.6.0 versionOperator 0.8.0 function identifier ( ) internal stateMutability virtual returns parameterList { statement } function identifier ( ) internal stateMutability virtual returns parameterList { statement statement } versionOperator 0.6.0 versionOperator 0.8.0 function identifier ( ) external stateMutability returns parameterList function identifier ( parameter ) external stateMutability returns parameterList function identifier ( parameter , parameter ) external returns parameterList function identifier ( parameter , parameter ) external stateMutability returns parameterList function identifier ( parameter , parameter ) external returns parameterList function identifier ( parameter , parameter , parameter ) external returns parameterList function identifier ( ) external stateMutability function identifier ( parameter ) external versionOperator 0.6.0 versionOperator 0.8.0 IStrategy Ownable SafeERC20 userDefinedTypeName Address elementaryTypeName SafeMath elementaryTypeName elementaryTypeName cEth elementaryTypeName comptroller elementaryTypeName comp elementaryTypeName uniswap elementaryTypeName weth elementaryTypeName controller constructor ( parameter , parameter , parameter , parameter , parameter , parameter ) { statement statement statement statement statement statement } onlyEOA ( ) { statement statement } function identifier ( ) external stateMutability overrideSpecifier returns parameterList { statement } function identifier ( ) external overrideSpecifier returns parameterList { statement statement } function identifier ( ) external overrideSpecifier modifierInvocation { statement statement statement } function identifier ( parameter ) external overrideSpecifier { statement statement statement statement statement statement } function identifier ( parameter ) external overrideSpecifier { statement statement statement statement statement statement statement statement } function identifier ( parameter ) external modifierInvocation { statement statement } receive ( ) external stateMutability { } fallback ( ) external stateMutability { } versionOperator 0.6.0 versionOperator 0.8.0 Committed ( eventParameter ) UnCommitted ( eventParameter ) ControllerChanged ( eventParameter , eventParameter ) function identifier ( ) external stateMutability returns parameterList function identifier ( ) external function identifier ( ) external returns parameterList function identifier ( parameter ) external function identifier ( parameter ) external versionOperator 0.6.0 versionOperator 0.8.0 function identifier ( parameter ) external returns parameterList function identifier ( ) external stateMutability function identifier ( parameter ) external returns parameterList versionOperator 0.6.0 versionOperator 0.8.0 function identifier ( parameter ) external versionOperator 0.6.0 versionOperator 0.8.0 function identifier ( parameter , parameter , parameter , parameter , parameter ) external function identifier ( parameter , parameter , parameter , parameter , parameter ) external 
>= < address typeName indexed identifier typeName indexed identifier simpleStatement simpleStatement emitStatement owner view ( parameter ) returnStatement simpleStatement simpleStatement renounceOwnership identifier emitStatement simpleStatement transferOwnership typeName identifier identifier simpleStatement emitStatement simpleStatement >= < tryAdd typeName identifier typeName identifier pure ( parameter , parameter ) simpleStatement ifStatement returnStatement trySub typeName identifier typeName identifier pure ( parameter , parameter ) ifStatement returnStatement tryMul typeName identifier typeName identifier pure ( parameter , parameter ) ifStatement simpleStatement ifStatement returnStatement tryDiv typeName identifier typeName identifier pure ( parameter , parameter ) ifStatement returnStatement tryMod typeName identifier typeName identifier pure ( parameter , parameter ) ifStatement returnStatement add typeName identifier typeName identifier pure ( parameter ) simpleStatement simpleStatement returnStatement sub typeName identifier typeName identifier pure ( parameter ) simpleStatement returnStatement mul typeName identifier typeName identifier pure ( parameter ) ifStatement simpleStatement simpleStatement returnStatement div typeName identifier typeName identifier pure ( parameter ) simpleStatement returnStatement mod typeName identifier typeName identifier pure ( parameter ) simpleStatement returnStatement sub typeName identifier typeName identifier typeName storageLocation identifier pure ( parameter ) simpleStatement returnStatement div typeName identifier typeName identifier typeName storageLocation identifier pure ( parameter ) simpleStatement returnStatement mod typeName identifier typeName identifier typeName storageLocation identifier pure ( parameter ) simpleStatement returnStatement >= < uint256 mapping ( elementaryTypeName => typeName ) mapping ( elementaryTypeName => typeName ) uint256 string string uint8 typeName storageLocation identifier typeName storageLocation identifier simpleStatement simpleStatement simpleStatement name view ( parameter ) returnStatement symbol view ( parameter ) returnStatement decimals view ( parameter ) returnStatement totalSupply view override ( parameter ) returnStatement balanceOf typeName identifier view override ( parameter ) returnStatement transfer typeName identifier typeName identifier override ( parameter ) simpleStatement returnStatement allowance typeName identifier typeName identifier view override ( parameter ) returnStatement approve typeName identifier typeName identifier override ( parameter ) simpleStatement returnStatement transferFrom typeName identifier typeName identifier typeName identifier override ( parameter ) simpleStatement simpleStatement returnStatement increaseAllowance typeName identifier typeName identifier ( parameter ) simpleStatement returnStatement decreaseAllowance typeName identifier typeName identifier ( parameter ) simpleStatement returnStatement _transfer typeName identifier typeName identifier typeName identifier simpleStatement simpleStatement simpleStatement simpleStatement simpleStatement emitStatement _mint typeName identifier typeName identifier simpleStatement simpleStatement simpleStatement simpleStatement emitStatement _burn typeName identifier typeName identifier simpleStatement simpleStatement simpleStatement simpleStatement emitStatement _approve typeName identifier typeName identifier typeName identifier simpleStatement simpleStatement simpleStatement emitStatement _setupDecimals typeName identifier simpleStatement _beforeTokenTransfer typeName identifier typeName identifier typeName identifier >= < totalSupply view ( parameter ) balanceOf typeName identifier view ( parameter ) transfer typeName identifier typeName identifier ( parameter ) allowance typeName identifier typeName identifier view ( parameter ) approve typeName identifier typeName identifier ( parameter ) transferFrom typeName identifier typeName identifier typeName identifier ( parameter ) typeName indexed identifier typeName indexed identifier typeName identifier typeName indexed identifier typeName indexed identifier typeName identifier >= < uint256 address safeTransfer typeName identifier typeName identifier typeName identifier simpleStatement safeTransferFrom typeName identifier typeName identifier typeName identifier typeName identifier simpleStatement safeApprove typeName identifier typeName identifier typeName identifier simpleStatement simpleStatement safeIncreaseAllowance typeName identifier typeName identifier typeName identifier simpleStatement simpleStatement safeDecreaseAllowance typeName identifier typeName identifier typeName identifier simpleStatement simpleStatement _callOptionalReturn typeName identifier typeName storageLocation identifier simpleStatement ifStatement >= < isContract typeName identifier view ( parameter ) simpleStatement inlineAssemblyStatement returnStatement sendValue typeName identifier typeName identifier simpleStatement simpleStatement simpleStatement functionCall typeName identifier typeName storageLocation identifier ( parameter ) returnStatement functionCall typeName identifier typeName storageLocation identifier typeName storageLocation identifier ( parameter ) returnStatement functionCallWithValue typeName identifier typeName storageLocation identifier typeName identifier ( parameter ) returnStatement functionCallWithValue typeName identifier typeName storageLocation identifier typeName identifier typeName storageLocation identifier ( parameter ) simpleStatement simpleStatement simpleStatement returnStatement functionStaticCall typeName identifier typeName storageLocation identifier view ( parameter ) returnStatement functionStaticCall typeName identifier typeName storageLocation identifier typeName storageLocation identifier view ( parameter ) simpleStatement simpleStatement returnStatement functionDelegateCall typeName identifier typeName storageLocation identifier ( parameter ) returnStatement functionDelegateCall typeName identifier typeName storageLocation identifier typeName storageLocation identifier ( parameter ) simpleStatement simpleStatement returnStatement _verifyCallResult typeName identifier typeName storageLocation identifier typeName storageLocation identifier pure ( parameter ) ifStatement >= < _msgSender view ( parameter ) returnStatement _msgData view ( parameter ) simpleStatement returnStatement >= < totalSupply view ( parameter ) balanceOf typeName identifier view ( parameter ) transfer typeName identifier typeName identifier ( parameter ) allowance typeName identifier typeName identifier view ( parameter ) approve typeName identifier typeName identifier ( parameter ) transferFrom typeName identifier typeName identifier typeName identifier ( parameter ) deposit payable withdraw typeName identifier >= < identifier address uint256 address payable address address address address address typeName identifier typeName identifier typeName identifier typeName identifier typeName identifier typeName identifier simpleStatement simpleStatement simpleStatement simpleStatement simpleStatement simpleStatement simpleStatement simpleStatement getAssetAddress view override ( parameter ) returnStatement syncBalance override ( parameter ) simpleStatement returnStatement harvest override identifier simpleStatement simpleStatement ifStatement aggregateCommit typeName identifier override simpleStatement simpleStatement simpleStatement simpleStatement simpleStatement emitStatement aggregateUncommit typeName identifier override simpleStatement simpleStatement simpleStatement simpleStatement simpleStatement simpleStatement simpleStatement emitStatement setController typeName identifier identifier emitStatement simpleStatement payable payable >= < typeName identifier typeName identifier typeName identifier typeName identifier getAssetAddress view ( parameter ) harvest syncBalance ( parameter ) aggregateCommit typeName identifier aggregateUncommit typeName identifier >= < balanceOfUnderlying typeName identifier ( parameter ) mint payable redeemUnderlying typeName identifier ( parameter ) >= < claimComp typeName identifier >= < swapExactTokensForTokens typeName typeName typeName storageLocation typeName typeName swapExactTokensForETH typeName identifier typeName identifier typeName storageLocation identifier typeName identifier typeName identifier 
elementaryTypeName previousOwner elementaryTypeName newOwner variableDeclarationStatement expressionStatement emit functionCall ; typeName return expression ; expressionStatement expressionStatement onlyOwner emit functionCall ; expressionStatement elementaryTypeName newOwner onlyOwner expressionStatement emit functionCall ; expressionStatement elementaryTypeName a elementaryTypeName b typeName typeName variableDeclarationStatement if ( expression ) statement return expression ; elementaryTypeName a elementaryTypeName b typeName typeName if ( expression ) statement return expression ; elementaryTypeName a elementaryTypeName b typeName typeName if ( expression ) statement variableDeclarationStatement if ( expression ) statement return expression ; elementaryTypeName a elementaryTypeName b typeName typeName if ( expression ) statement return expression ; elementaryTypeName a elementaryTypeName b typeName typeName if ( expression ) statement return expression ; elementaryTypeName a elementaryTypeName b typeName variableDeclarationStatement expressionStatement return expression ; elementaryTypeName a elementaryTypeName b typeName expressionStatement return expression ; elementaryTypeName a elementaryTypeName b typeName if ( expression ) statement variableDeclarationStatement expressionStatement return expression ; elementaryTypeName a elementaryTypeName b typeName expressionStatement return expression ; elementaryTypeName a elementaryTypeName b typeName expressionStatement return expression ; elementaryTypeName a elementaryTypeName b elementaryTypeName memory errorMessage typeName expressionStatement return expression ; elementaryTypeName a elementaryTypeName b elementaryTypeName memory errorMessage typeName expressionStatement return expression ; elementaryTypeName a elementaryTypeName b elementaryTypeName memory errorMessage typeName expressionStatement return expression ; address elementaryTypeName address mapping elementaryTypeName memory name_ elementaryTypeName memory symbol_ expressionStatement expressionStatement expressionStatement typeName storageLocation return expression ; typeName storageLocation return expression ; typeName return expression ; typeName return expression ; elementaryTypeName account typeName return expression ; elementaryTypeName recipient elementaryTypeName amount typeName expressionStatement return expression ; elementaryTypeName owner elementaryTypeName spender typeName return expression ; elementaryTypeName spender elementaryTypeName amount typeName expressionStatement return expression ; elementaryTypeName sender elementaryTypeName recipient elementaryTypeName amount typeName expressionStatement expressionStatement return expression ; elementaryTypeName spender elementaryTypeName addedValue typeName expressionStatement return expression ; elementaryTypeName spender elementaryTypeName subtractedValue typeName expressionStatement return expression ; elementaryTypeName sender elementaryTypeName recipient elementaryTypeName amount expressionStatement expressionStatement expressionStatement expressionStatement expressionStatement emit functionCall ; elementaryTypeName account elementaryTypeName amount expressionStatement expressionStatement expressionStatement expressionStatement emit functionCall ; elementaryTypeName account elementaryTypeName amount expressionStatement expressionStatement expressionStatement expressionStatement emit functionCall ; elementaryTypeName owner elementaryTypeName spender elementaryTypeName amount expressionStatement expressionStatement expressionStatement emit functionCall ; elementaryTypeName decimals_ expressionStatement elementaryTypeName from elementaryTypeName to elementaryTypeName amount typeName elementaryTypeName account typeName elementaryTypeName recipient elementaryTypeName amount typeName elementaryTypeName owner elementaryTypeName spender typeName elementaryTypeName spender elementaryTypeName amount typeName elementaryTypeName sender elementaryTypeName recipient elementaryTypeName amount typeName elementaryTypeName from elementaryTypeName to elementaryTypeName value elementaryTypeName owner elementaryTypeName spender elementaryTypeName value userDefinedTypeName token elementaryTypeName to elementaryTypeName value expressionStatement userDefinedTypeName token elementaryTypeName from elementaryTypeName to elementaryTypeName value expressionStatement userDefinedTypeName token elementaryTypeName spender elementaryTypeName value expressionStatement expressionStatement userDefinedTypeName token elementaryTypeName spender elementaryTypeName value variableDeclarationStatement expressionStatement userDefinedTypeName token elementaryTypeName spender elementaryTypeName value variableDeclarationStatement expressionStatement userDefinedTypeName token elementaryTypeName memory data variableDeclarationStatement if ( expression ) statement elementaryTypeName account typeName variableDeclarationStatement assembly assemblyBlock return expression ; elementaryTypeName recipient elementaryTypeName amount expressionStatement variableDeclarationStatement expressionStatement elementaryTypeName target elementaryTypeName memory data typeName storageLocation return expression ; elementaryTypeName target elementaryTypeName memory data elementaryTypeName memory errorMessage typeName storageLocation return expression ; elementaryTypeName target elementaryTypeName memory data elementaryTypeName value typeName storageLocation return expression ; elementaryTypeName target elementaryTypeName memory data elementaryTypeName value elementaryTypeName memory errorMessage typeName storageLocation expressionStatement expressionStatement variableDeclarationStatement return expression ; elementaryTypeName target elementaryTypeName memory data typeName storageLocation return expression ; elementaryTypeName target elementaryTypeName memory data elementaryTypeName memory errorMessage typeName storageLocation expressionStatement variableDeclarationStatement return expression ; elementaryTypeName target elementaryTypeName memory data typeName storageLocation return expression ; elementaryTypeName target elementaryTypeName memory data elementaryTypeName memory errorMessage typeName storageLocation expressionStatement variableDeclarationStatement return expression ; elementaryTypeName success elementaryTypeName memory returndata elementaryTypeName memory errorMessage typeName storageLocation if ( expression ) statement else statement typeName return expression ; typeName storageLocation expressionStatement return expression ; typeName elementaryTypeName account typeName elementaryTypeName recipient elementaryTypeName amount typeName elementaryTypeName owner elementaryTypeName spender typeName elementaryTypeName spender elementaryTypeName amount typeName elementaryTypeName src elementaryTypeName dst elementaryTypeName wad typeName elementaryTypeName wad IERC20 elementaryTypeName _cEth elementaryTypeName _comptroller elementaryTypeName _comp elementaryTypeName _uniswap elementaryTypeName _weth elementaryTypeName _controller expressionStatement expressionStatement expressionStatement expressionStatement expressionStatement expressionStatement expressionStatement expressionStatement typeName return expression ; typeName variableDeclarationStatement return expression ; onlyEOA expressionStatement variableDeclarationStatement if ( expression ) statement elementaryTypeName _commitAmount expressionStatement expressionStatement expressionStatement expressionStatement expressionStatement emit functionCall ; elementaryTypeName _uncommitAmount expressionStatement expressionStatement variableDeclarationStatement expressionStatement variableDeclarationStatement expressionStatement expressionStatement emit functionCall ; elementaryTypeName _controller onlyOwner emit functionCall ; expressionStatement elementaryTypeName commitAmount elementaryTypeName uncommitAmount elementaryTypeName previousController elementaryTypeName newController typeName typeName elementaryTypeName commitAmount elementaryTypeName uncommitAmount elementaryTypeName owner typeName elementaryTypeName redeemAmount typeName elementaryTypeName holder elementaryTypeName elementaryTypeName typeName [ ] calldata elementaryTypeName elementaryTypeName elementaryTypeName amountIn elementaryTypeName amountOutMin typeName [ ] calldata paths elementaryTypeName to elementaryTypeName deadline 
address address variableDeclaration = expression ; expression ; expression ( functionCallArguments ) elementaryTypeName primaryExpression expression ; expression ; expression ( functionCallArguments ) expression ; address expression ; expression ( functionCallArguments ) expression ; uint256 uint256 elementaryTypeName elementaryTypeName variableDeclaration = expression ; expression < expression returnStatement primaryExpression uint256 uint256 elementaryTypeName elementaryTypeName expression > expression returnStatement primaryExpression uint256 uint256 elementaryTypeName elementaryTypeName expression == expression returnStatement variableDeclaration = expression ; expression != expression returnStatement primaryExpression uint256 uint256 elementaryTypeName elementaryTypeName expression == expression returnStatement primaryExpression uint256 uint256 elementaryTypeName elementaryTypeName expression == expression returnStatement primaryExpression uint256 uint256 elementaryTypeName variableDeclaration = expression ; expression ; primaryExpression uint256 uint256 elementaryTypeName expression ; expression - expression uint256 uint256 elementaryTypeName expression == expression returnStatement variableDeclaration = expression ; expression ; primaryExpression uint256 uint256 elementaryTypeName expression ; expression / expression uint256 uint256 elementaryTypeName expression ; expression % expression uint256 uint256 string elementaryTypeName expression ; expression - expression uint256 uint256 string elementaryTypeName expression ; expression / expression uint256 uint256 string elementaryTypeName expression ; expression % expression uint256 mapping ( elementaryTypeName => typeName ) string string expression ; expression ; expression ; elementaryTypeName memory primaryExpression elementaryTypeName memory primaryExpression elementaryTypeName primaryExpression elementaryTypeName primaryExpression address elementaryTypeName expression [ expression ] address uint256 elementaryTypeName expression ; primaryExpression address address elementaryTypeName expression [ expression ] address uint256 elementaryTypeName expression ; primaryExpression address address uint256 elementaryTypeName expression ; expression ; primaryExpression address uint256 elementaryTypeName expression ; primaryExpression address uint256 elementaryTypeName expression ; primaryExpression address address uint256 expression ; expression ; expression ; expression ; expression ; expression ( functionCallArguments ) address uint256 expression ; expression ; expression ; expression ; expression ( functionCallArguments ) address uint256 expression ; expression ; expression ; expression ; expression ( functionCallArguments ) address address uint256 expression ; expression ; expression ; expression ( functionCallArguments ) uint8 expression ; address address uint256 elementaryTypeName address elementaryTypeName address uint256 elementaryTypeName address address elementaryTypeName address uint256 elementaryTypeName address address uint256 elementaryTypeName address address uint256 address address uint256 identifier address uint256 expression ; identifier address address uint256 expression ; identifier address uint256 expression ; expression ; identifier address uint256 variableDeclaration = expression ; expression ; identifier address uint256 variableDeclaration = expression ; expression ; identifier bytes variableDeclaration = expression ; expression > expression block address elementaryTypeName variableDeclaration ; { assemblyItem } expression > expression address payable uint256 expression ; ( variableDeclarationList ) = expression ; expression ; address bytes elementaryTypeName memory expression ( functionCallArguments ) address bytes string elementaryTypeName memory expression ( functionCallArguments ) address bytes uint256 elementaryTypeName memory expression ( functionCallArguments ) address bytes uint256 string elementaryTypeName memory expression ; expression ; ( variableDeclarationList ) = expression ; expression ( functionCallArguments ) address bytes elementaryTypeName memory expression ( functionCallArguments ) address bytes string elementaryTypeName memory expression ; ( variableDeclarationList ) = expression ; expression ( functionCallArguments ) address bytes elementaryTypeName memory expression ( functionCallArguments ) address bytes string elementaryTypeName memory expression ; ( variableDeclarationList ) = expression ; expression ( functionCallArguments ) bool bytes string elementaryTypeName memory primaryExpression block block elementaryTypeName expression . identifier elementaryTypeName memory expression ; expression . identifier elementaryTypeName address elementaryTypeName address uint256 elementaryTypeName address address elementaryTypeName address uint256 elementaryTypeName address address uint256 elementaryTypeName uint256 address payable address address address address address expression ; expression ; expression ; expression ; expression ; expression ; expression ; expression ; elementaryTypeName primaryExpression elementaryTypeName variableDeclaration = expression ; primaryExpression expression ; variableDeclaration = expression ; expression > expression block uint256 expression ; expression ; expression ; expression ; expression ; expression ( functionCallArguments ) uint256 expression ; expression ; variableDeclaration = expression ; expression ; variableDeclaration = expression ; expression ; expression ; expression ( functionCallArguments ) address expression ( functionCallArguments ) expression ; uint256 uint256 address address elementaryTypeName elementaryTypeName uint256 uint256 address elementaryTypeName uint256 elementaryTypeName address uint256 uint256 elementaryTypeName address uint256 uint256 uint256 elementaryTypeName address uint256 
typeName identifier expression ( functionCallArguments ) expression = expression primaryExpression expressionList address identifier expression ( functionCallArguments ) primaryExpression primaryExpression expressionList expression = expression expression ( functionCallArguments ) primaryExpression expressionList expression = expression bool uint256 typeName identifier expression + expression primaryExpression primaryExpression return expression ; tupleExpression bool uint256 primaryExpression primaryExpression return expression ; tupleExpression bool uint256 primaryExpression primaryExpression return expression ; typeName identifier expression * expression expression / expression primaryExpression return expression ; tupleExpression bool uint256 primaryExpression primaryExpression return expression ; tupleExpression bool uint256 primaryExpression primaryExpression return expression ; tupleExpression uint256 typeName identifier expression + expression expression ( functionCallArguments ) identifier uint256 expression ( functionCallArguments ) primaryExpression primaryExpression uint256 primaryExpression primaryExpression return expression ; typeName identifier expression * expression expression ( functionCallArguments ) identifier uint256 expression ( functionCallArguments ) primaryExpression primaryExpression uint256 expression ( functionCallArguments ) primaryExpression primaryExpression uint256 expression ( functionCallArguments ) primaryExpression primaryExpression uint256 expression ( functionCallArguments ) primaryExpression primaryExpression uint256 expression ( functionCallArguments ) primaryExpression primaryExpression address elementaryTypeName expression = expression expression = expression expression = expression string identifier string identifier uint8 identifier uint256 identifier uint256 primaryExpression primaryExpression bool expression ( functionCallArguments ) true uint256 expression [ expression ] primaryExpression bool expression ( functionCallArguments ) true bool expression ( functionCallArguments ) expression ( functionCallArguments ) true bool expression ( functionCallArguments ) true bool expression ( functionCallArguments ) true expression ( functionCallArguments ) expression ( functionCallArguments ) expression ( functionCallArguments ) expression = expression expression = expression primaryExpression expressionList expression ( functionCallArguments ) expression ( functionCallArguments ) expression = expression expression = expression primaryExpression expressionList expression ( functionCallArguments ) expression ( functionCallArguments ) expression = expression expression = expression primaryExpression expressionList expression ( functionCallArguments ) expression ( functionCallArguments ) expression = expression primaryExpression expressionList expression = expression uint256 uint256 bool uint256 bool bool IERC20 expression ( functionCallArguments ) IERC20 expression ( functionCallArguments ) IERC20 expression ( functionCallArguments ) expression ( functionCallArguments ) IERC20 typeName identifier expression ( functionCallArguments ) expression ( functionCallArguments ) IERC20 typeName identifier expression ( functionCallArguments ) expression ( functionCallArguments ) IERC20 typeName storageLocation identifier expression ( functionCallArguments ) expression . identifier primaryExpression { statement } bool typeName identifier assemblyAssignment primaryExpression primaryExpression expression ( functionCallArguments ) variableDeclaration , expression ( functionCallArguments ) expression ( functionCallArguments ) bytes primaryExpression expressionList bytes primaryExpression expressionList bytes primaryExpression expressionList bytes expression ( functionCallArguments ) expression ( functionCallArguments ) variableDeclaration , variableDeclaration expression ( functionCallArguments ) primaryExpression expressionList bytes primaryExpression expressionList bytes expression ( functionCallArguments ) variableDeclaration , variableDeclaration expression ( functionCallArguments ) primaryExpression expressionList bytes primaryExpression expressionList bytes expression ( functionCallArguments ) variableDeclaration , variableDeclaration expression ( functionCallArguments ) primaryExpression expressionList bytes identifier { statement } { statement } address payable primaryExpression sender bytes primaryExpression primaryExpression data uint256 uint256 bool uint256 bool bool expression = expression expression = expression expression = expression expression = expression expression = expression expression = expression expression ( functionCallArguments ) primaryExpression address identifier uint256 typeName identifier expression ( functionCallArguments ) identifier expression ( functionCallArguments ) typeName identifier expression ( functionCallArguments ) primaryExpression primaryExpression { statement statement statement statement statement statement statement } expression ( functionCallArguments ) expression ( functionCallArguments ) expression ( functionCallArguments ) expression ( functionCallArguments ) expression ( functionCallArguments ) primaryExpression expressionList expression ( functionCallArguments ) expression ( functionCallArguments ) typeName identifier expression ( functionCallArguments ) expression ( functionCallArguments ) typeName identifier expression . identifier expression ( functionCallArguments ) expression ( functionCallArguments ) primaryExpression expressionList primaryExpression expressionList expression = expression address uint256 uint256 uint256 address address 
elementaryTypeName msgSender primaryExpression primaryExpression primaryExpression identifier expression , expression _owner primaryExpression expressionList identifier identifier expression , expression primaryExpression expression ( functionCallArguments ) primaryExpression expressionList identifier expression , expression primaryExpression primaryExpression elementaryTypeName c primaryExpression primaryExpression identifier identifier primaryExpression ( expression , expression ) identifier identifier primaryExpression ( expression , expression ) identifier numberLiteral primaryExpression elementaryTypeName c primaryExpression primaryExpression primaryExpression primaryExpression identifier primaryExpression ( expression , expression ) identifier numberLiteral primaryExpression ( expression , expression ) identifier numberLiteral primaryExpression ( expression , expression ) elementaryTypeName c primaryExpression primaryExpression primaryExpression expressionList c primaryExpression expressionList identifier identifier identifier numberLiteral primaryExpression elementaryTypeName c primaryExpression primaryExpression primaryExpression expressionList c primaryExpression expressionList identifier identifier primaryExpression expressionList identifier identifier primaryExpression expressionList identifier identifier primaryExpression expressionList identifier identifier primaryExpression expressionList identifier identifier uint256 primaryExpression primaryExpression primaryExpression primaryExpression primaryExpression primaryExpression _name _symbol _decimals _totalSupply identifier identifier primaryExpression expressionList primaryExpression primaryExpression identifier primaryExpression expressionList primaryExpression expressionList primaryExpression expressionList primaryExpression expressionList primaryExpression expressionList primaryExpression expressionList primaryExpression expressionList primaryExpression expressionList expression [ expression ] expression ( functionCallArguments ) expression [ expression ] expression ( functionCallArguments ) identifier expression , expression , expression primaryExpression expressionList primaryExpression expressionList primaryExpression expression ( functionCallArguments ) expression [ expression ] expression ( functionCallArguments ) identifier expression , expression , expression primaryExpression expressionList primaryExpression expressionList expression [ expression ] expression ( functionCallArguments ) primaryExpression expression ( functionCallArguments ) identifier expression , expression , expression primaryExpression expressionList primaryExpression expressionList expression [ expression ] primaryExpression identifier expression , expression , expression primaryExpression primaryExpression primaryExpression expressionList primaryExpression expressionList primaryExpression expressionList primaryExpression expressionList elementaryTypeName newAllowance expression . identifier expressionList primaryExpression expressionList elementaryTypeName newAllowance expression . identifier expressionList primaryExpression expressionList elementaryTypeName memory returndata expression . identifier expressionList primaryExpression length numberLiteral simpleStatement elementaryTypeName size assemblyIdentifierList := assemblyExpression identifier numberLiteral primaryExpression expressionList typeName identifier expression { nameValueList } expressionList primaryExpression expressionList identifier expression , expression , expression identifier expression , expression , expression , expression identifier expression , expression , expression , expression primaryExpression expressionList primaryExpression expressionList typeName identifier typeName storageLocation identifier expression { nameValueList } expressionList identifier expression , expression , expression identifier expression , expression , expression primaryExpression expressionList typeName identifier typeName storageLocation identifier expression . identifier expressionList identifier expression , expression , expression identifier expression , expression , expression primaryExpression expressionList typeName identifier typeName storageLocation identifier expression . identifier expressionList identifier expression , expression , expression success returnStatement ifStatement identifier identifier identifier primaryExpression primaryExpression primaryExpression primaryExpression primaryExpression primaryExpression primaryExpression primaryExpression primaryExpression primaryExpression primaryExpression primaryExpression primaryExpression expressionList identifier weth elementaryTypeName ethBalance expression . identifier expressionList ethBalance expression . identifier expressionList elementaryTypeName compBalance expression . identifier expressionList identifier numberLiteral simpleStatement simpleStatement simpleStatement simpleStatement simpleStatement simpleStatement simpleStatement primaryExpression expressionList primaryExpression expressionList expression . identifier expressionList expression . identifier expressionList expression { nameValueList } identifier expression primaryExpression expressionList primaryExpression expressionList elementaryTypeName redeemResult expression . identifier expressionList primaryExpression expressionList elementaryTypeName ethBalance expression ( functionCallArguments ) balance expression { nameValueList } expression . identifier expressionList identifier expression identifier expression , expression primaryExpression primaryExpression 
address identifier identifier identifier OwnershipTransferred expression ( functionCallArguments ) primaryExpression identifier expression , expression _ OwnershipTransferred primaryExpression expression ( functionCallArguments ) identifier primaryExpression expressionList identifier expression , expression OwnershipTransferred primaryExpression primaryExpression identifier identifier uint256 identifier identifier c a tupleExpression primaryExpression primaryExpression b a tupleExpression primaryExpression expression - expression a 0 tupleExpression uint256 identifier identifier identifier identifier b tupleExpression primaryExpression primaryExpression b 0 tupleExpression primaryExpression expression / expression b 0 tupleExpression primaryExpression expression % expression uint256 identifier identifier identifier expression , expression identifier expression , expression a b a 0 numberLiteral uint256 identifier identifier identifier expression , expression identifier expression , expression a b identifier expression , expression a b identifier expression , expression a b identifier expression , expression a b identifier expression , expression a b identifier identifier identifier identifier identifier numberLiteral _balances account identifier expression , expression , expression identifier identifier spender identifier expression , expression , expression identifier expression , expression , expression identifier expression , expression , expression identifier expression , expression , expression identifier expression , expression , expression identifier expression , expression identifier expression , expression identifier expression , expression , expression primaryExpression primaryExpression expression . identifier expressionList primaryExpression primaryExpression expression . identifier expressionList Transfer primaryExpression primaryExpression primaryExpression identifier expression , expression identifier expression , expression , expression identifier expression . identifier expressionList primaryExpression primaryExpression expression . identifier expressionList Transfer expression ( functionCallArguments ) primaryExpression primaryExpression identifier expression , expression identifier expression , expression , expression primaryExpression primaryExpression expression . identifier expressionList identifier expression . identifier expressionList Transfer primaryExpression expression ( functionCallArguments ) primaryExpression identifier expression , expression identifier expression , expression expression [ expression ] primaryExpression identifier Approval primaryExpression primaryExpression primaryExpression identifier identifier identifier expression , expression identifier expression , expression identifier expression , expression identifier expression , expression uint256 expression ( functionCallArguments ) add expression identifier expression , expression uint256 expression ( functionCallArguments ) sub expression , expression identifier expression , expression bytes expression ( functionCallArguments ) functionCall expression , expression identifier 0 expressionStatement uint256 identifier assemblyCall size 0 identifier expression , expression elementaryTypeName success expression . identifier nameValue expression identifier expression , expression functionCall primaryExpression primaryExpression primaryExpression functionCallWithValue primaryExpression primaryExpression primaryExpression primaryExpression functionCallWithValue primaryExpression primaryExpression primaryExpression primaryExpression identifier expression , expression identifier expression , expression elementaryTypeName success elementaryTypeName memory returndata expression . identifier nameValue expression _verifyCallResult primaryExpression primaryExpression primaryExpression functionStaticCall primaryExpression primaryExpression primaryExpression identifier expression , expression elementaryTypeName success elementaryTypeName memory returndata primaryExpression staticcall expression _verifyCallResult primaryExpression primaryExpression primaryExpression functionDelegateCall primaryExpression primaryExpression primaryExpression identifier expression , expression elementaryTypeName success elementaryTypeName memory returndata primaryExpression delegatecall expression _verifyCallResult primaryExpression primaryExpression primaryExpression return expression ; if ( expression ) statement else statement msg this msg identifier identifier identifier identifier identifier identifier identifier identifier identifier identifier identifier identifier identifier expression , expression _ uint256 expression ( functionCallArguments ) balanceOfUnderlying expression expression ( functionCallArguments ) claimComp expression uint256 expression ( functionCallArguments ) balanceOf expression compBalance 0 expressionStatement variableDeclarationStatement expressionStatement expressionStatement expressionStatement variableDeclarationStatement expressionStatement identifier expression , expression identifier expression , expression expression ( functionCallArguments ) safeTransferFrom expression , expression , expression expression ( functionCallArguments ) withdraw expression expression . identifier nameValue Committed primaryExpression identifier expression , expression identifier expression , expression uint256 expression ( functionCallArguments ) redeemUnderlying expression identifier expression , expression uint256 primaryExpression expressionList expression . identifier nameValue expression ( functionCallArguments ) safeTransfer expression , expression UnCommitted primaryExpression ControllerChanged primaryExpression primaryExpression identifier identifier 
_msgSender _owner msgSender primaryExpression expressionList identifier require expression == expression primaryExpression identifier primaryExpression expressionList _owner identifier expression require expression != expression primaryExpression identifier identifier _owner newOwner a b ( expression , expression ) true identifier ( expression , expression ) true primaryExpression primaryExpression ( expression , expression ) a b c a ( expression , expression ) true identifier ( expression , expression ) true primaryExpression primaryExpression ( expression , expression ) true primaryExpression primaryExpression a b require expression >= expression primaryExpression require expression <= expression primaryExpression 0 a b require expression == expression primaryExpression require expression > expression primaryExpression require expression > expression primaryExpression require expression <= expression primaryExpression require expression > expression primaryExpression require expression > expression primaryExpression _name name_ _symbol symbol_ _decimals 18 _transfer expression ( functionCallArguments ) primaryExpression primaryExpression _allowances owner _approve expression ( functionCallArguments ) primaryExpression primaryExpression _transfer primaryExpression primaryExpression primaryExpression _approve primaryExpression expression ( functionCallArguments ) expression ( functionCallArguments ) _approve expression ( functionCallArguments ) primaryExpression expression ( functionCallArguments ) _approve expression ( functionCallArguments ) primaryExpression expression ( functionCallArguments ) require expression != expression primaryExpression require expression != expression primaryExpression _beforeTokenTransfer primaryExpression primaryExpression primaryExpression identifier identifier expression [ expression ] sub expression , expression identifier identifier expression [ expression ] add expression identifier identifier identifier require expression != expression primaryExpression _beforeTokenTransfer expression ( functionCallArguments ) primaryExpression primaryExpression _totalSupply primaryExpression add expression identifier identifier expression [ expression ] add expression primaryExpression expressionList identifier identifier require expression != expression primaryExpression _beforeTokenTransfer primaryExpression expression ( functionCallArguments ) primaryExpression identifier identifier expression [ expression ] sub expression , expression _totalSupply primaryExpression sub expression identifier primaryExpression expressionList identifier require expression != expression primaryExpression require expression != expression primaryExpression primaryExpression primaryExpression identifier amount identifier identifier identifier _decimals decimals_ _callOptionalReturn primaryExpression expression ( functionCallArguments ) _callOptionalReturn primaryExpression expression ( functionCallArguments ) require expression || expression primaryExpression _callOptionalReturn primaryExpression expression ( functionCallArguments ) expression . identifier expressionList primaryExpression _callOptionalReturn primaryExpression expression ( functionCallArguments ) expression . identifier expressionList primaryExpression primaryExpression _callOptionalReturn primaryExpression expression ( functionCallArguments ) primaryExpression expressionList primaryExpression primaryExpression returndata expression ; size identifier ( assemblyExpression ) require expression >= expression primaryExpression bool primaryExpression call identifier : expression primaryExpression require primaryExpression primaryExpression identifier identifier stringLiteral identifier identifier numberLiteral identifier identifier identifier identifier stringLiteral require expression >= expression primaryExpression require expression ( functionCallArguments ) primaryExpression bool bytes primaryExpression call identifier : expression primaryExpression identifier identifier identifier identifier identifier stringLiteral require expression ( functionCallArguments ) primaryExpression bool bytes identifier primaryExpression identifier identifier identifier identifier identifier stringLiteral require expression ( functionCallArguments ) primaryExpression bool bytes identifier primaryExpression identifier identifier identifier primaryExpression expression > expression block block cEth _cEth comptroller _comptroller comp _comp uniswap _uniswap weth _weth controller _controller require expression == expression primaryExpression primaryExpression expressionList expression ( functionCallArguments ) primaryExpression expressionList expression ( functionCallArguments ) primaryExpression expressionList expression ( functionCallArguments ) expression ; variableDeclaration = expression ; expression ; expression ; expression ; variableDeclaration = expression ; expression ; require expression == expression primaryExpression require expression > expression primaryExpression primaryExpression expressionList expression . identifier expression ( functionCallArguments ) primaryExpression primaryExpression expressionList primaryExpression expression ( functionCallArguments ) mint identifier : expression identifier require expression == expression primaryExpression require expression > expression primaryExpression primaryExpression expressionList primaryExpression require expression == expression primaryExpression identifier expression expression ( functionCallArguments ) deposit identifier : expression primaryExpression expressionList expression . identifier primaryExpression identifier identifier identifier controller _controller 
identifier expression msgSender expression ( functionCallArguments ) expression ( functionCallArguments ) stringLiteral _owner identifier expression address primaryExpression primaryExpression expression ( functionCallArguments ) stringLiteral _owner newOwner primaryExpression primaryExpression c primaryExpression primaryExpression identifier identifier primaryExpression primaryExpression primaryExpression primaryExpression c primaryExpression primaryExpression identifier identifier primaryExpression primaryExpression identifier identifier primaryExpression primaryExpression stringLiteral primaryExpression primaryExpression stringLiteral expression / expression primaryExpression stringLiteral primaryExpression primaryExpression stringLiteral primaryExpression primaryExpression stringLiteral primaryExpression primaryExpression identifier primaryExpression primaryExpression identifier primaryExpression primaryExpression identifier primaryExpression identifier identifier primaryExpression identifier identifier identifier identifier identifier identifier primaryExpression expression . identifier expressionList primaryExpression identifier expression . identifier expressionList primaryExpression identifier expression . identifier expressionList primaryExpression expression ( functionCallArguments ) stringLiteral primaryExpression expression ( functionCallArguments ) stringLiteral identifier identifier identifier _balances sender primaryExpression primaryExpression primaryExpression primaryExpression _balances recipient primaryExpression primaryExpression primaryExpression sender recipient amount primaryExpression expression ( functionCallArguments ) stringLiteral primaryExpression expressionList identifier identifier identifier primaryExpression _balances account primaryExpression primaryExpression primaryExpression identifier expression account amount primaryExpression expression ( functionCallArguments ) stringLiteral identifier primaryExpression expressionList identifier _balances account primaryExpression primaryExpression primaryExpression primaryExpression identifier primaryExpression account identifier expression amount primaryExpression expression ( functionCallArguments ) stringLiteral primaryExpression expression ( functionCallArguments ) stringLiteral identifier identifier spender owner spender amount identifier expression . identifier expressionList identifier expression . identifier expressionList ( expression ) ( expression ) stringLiteral identifier expression . identifier expressionList primaryExpression allowance expression , expression identifier identifier expression . identifier expressionList primaryExpression allowance expression , expression identifier stringLiteral identifier expression . identifier expressionList identifier expression identifier stringLiteral expression ( functionCallArguments ) extcodesize assemblyCall expression . identifier primaryExpression stringLiteral identifier value primaryExpression stringLiteral identifier stringLiteral target data "Address: low-level call failed" target data 0 errorMessage target data value "Address: low-level call with value failed" expression . identifier primaryExpression stringLiteral primaryExpression expressionList stringLiteral identifier value primaryExpression identifier success returndata errorMessage target data "Address: low-level static call failed" primaryExpression expressionList stringLiteral target identifier success returndata errorMessage target data "Address: low-level delegate call failed" primaryExpression expressionList stringLiteral target identifier success returndata errorMessage identifier expression . identifier primaryExpression { statement } { statement } expression . identifier expression . identifier stringLiteral identifier expression primaryExpression expressionList identifier expression primaryExpression expressionList identifier expression primaryExpression expressionList expression ( functionCallArguments ) typeName storageLocation identifier expression ( functionCallArguments ) expression = expression expression = expression expression ( functionCallArguments ) typeName identifier expression . identifier expression ( functionCallArguments ) expression . identifier primaryExpression stringLiteral primaryExpression primaryExpression stringLiteral identifier expression primaryExpression sender primaryExpression expressionList identifier identifier expression identifier primaryExpression expressionList value primaryExpression _commitAmount expression . identifier primaryExpression stringLiteral primaryExpression primaryExpression stringLiteral identifier expression identifier primaryExpression primaryExpression stringLiteral address primaryExpression primaryExpression expressionList value primaryExpression identifier expression primaryExpression sender identifier _uncommitAmount controller _controller 
address primaryExpression primaryExpression primaryExpression "Ownable: caller is not the owner" address primaryExpression numberLiteral identifier primaryExpression expressionList "Ownable: new owner is the zero address" false numberLiteral false numberLiteral a b true numberLiteral false numberLiteral false numberLiteral a b false numberLiteral a b identifier identifier "SafeMath: addition overflow" identifier identifier "SafeMath: subtraction overflow" primaryExpression primaryExpression identifier "SafeMath: multiplication overflow" identifier numberLiteral "SafeMath: division by zero" identifier numberLiteral "SafeMath: modulo by zero" identifier identifier errorMessage identifier numberLiteral errorMessage identifier numberLiteral errorMessage identifier recipient amount identifier spender amount sender recipient amount sender identifier expression [ expression ] sub expression , expression identifier spender expression [ expression ] add expression identifier spender expression [ expression ] sub expression , expression identifier primaryExpression expressionList "ERC20: transfer from the zero address" identifier primaryExpression expressionList "ERC20: transfer to the zero address" sender recipient amount identifier identifier identifier stringLiteral identifier identifier identifier identifier primaryExpression expressionList "ERC20: mint to the zero address" identifier expression account amount _totalSupply identifier identifier identifier identifier address primaryExpression identifier primaryExpression expressionList "ERC20: burn from the zero address" account identifier expression amount identifier identifier identifier stringLiteral _totalSupply identifier address primaryExpression identifier primaryExpression expressionList "ERC20: approve from the zero address" identifier primaryExpression expressionList "ERC20: approve to the zero address" _allowances owner token primaryExpression encodeWithSelector expression , expression , expression token primaryExpression encodeWithSelector expression , expression , expression , expression expression == expression expression == expression "SafeERC20: approve from non-zero to non-zero allowance" token primaryExpression encodeWithSelector expression , expression , expression identifier expression ( functionCallArguments ) primaryExpression value token primaryExpression encodeWithSelector expression , expression , expression identifier expression ( functionCallArguments ) primaryExpression value "SafeERC20: decreased allowance below zero" token primaryExpression encodeWithSelector expression , expression , expression address primaryExpression data "SafeERC20: low-level call failed" primaryExpression expressionList identifier expression ( functionCallArguments ) balance identifier "Address: insufficient balance" recipient identifier "" success "Address: unable to send value, recipient may have reverted" expression ( functionCallArguments ) balance identifier "Address: insufficient balance for call" identifier expression "Address: call to non-contract" target identifier data identifier expression "Address: static call to non-contract" data identifier expression "Address: delegate call to non-contract" data returndata primaryExpression length numberLiteral inlineAssemblyStatement simpleStatement primaryExpression sender primaryExpression origin "Not EOA" ICEth primaryExpression identifier expression IComptroller primaryExpression identifier expression IERC20 primaryExpression identifier expression expression . identifier expressionList typeName [ ] memory paths new typeName expressionList expression [ expression ] primaryExpression expression [ expression ] primaryExpression expression . identifier expressionList elementaryTypeName obtainedEthAmount expression ( functionCallArguments ) balance expression { nameValueList } primaryExpression sender identifier "Not controller" identifier numberLiteral "Nothing to commit" IERC20 primaryExpression identifier identifier expression _commitAmount IWETH primaryExpression _commitAmount identifier expression identifier primaryExpression sender identifier "Not controller" identifier numberLiteral "Nothing to uncommit" ICEth primaryExpression _uncommitAmount identifier numberLiteral "Couldn't redeem cToken" identifier identifier expression identifier IERC20 primaryExpression identifier ethBalance 
numberLiteral identifier identifier numberLiteral 0 newOwner identifier expression 0 0 0 0 0 0 c a b a identifier identifier b b 0 b 0 b a b 0 b 0 _msgSender _msgSender _msgSender expression [ expression ] expression ( functionCallArguments ) primaryExpression primaryExpression _msgSender expression [ expression ] primaryExpression primaryExpression _msgSender expression [ expression ] primaryExpression primaryExpression primaryExpression sender identifier expression recipient identifier expression _balances sender amount "ERC20: transfer amount exceeds balance" _balances recipient amount account identifier expression address primaryExpression amount _balances account amount numberLiteral account identifier expression address primaryExpression _balances account amount "ERC20: burn amount exceeds balance" amount numberLiteral owner identifier expression spender identifier expression identifier expression . identifier primaryExpression primaryExpression identifier expression . identifier primaryExpression primaryExpression primaryExpression primaryExpression primaryExpression expression ( functionCallArguments ) primaryExpression identifier expression . identifier primaryExpression primaryExpression token primaryExpression expressionList identifier identifier expression . identifier primaryExpression primaryExpression token primaryExpression expressionList identifier identifier expression . identifier primaryExpression primaryExpression identifier identifier expression , expression account primaryExpression expressionList amount amount primaryExpression expressionList value isContract primaryExpression value isContract primaryExpression isContract primaryExpression identifier 0 assembly assemblyBlock expressionStatement identifier identifier identifier address primaryExpression identifier address primaryExpression identifier address primaryExpression expression ( functionCallArguments ) safeIncreaseAllowance expression , expression elementaryTypeName typeName [ ] expression primaryExpression primaryExpression identifier primaryExpression primaryExpression identifier expression ( functionCallArguments ) swapExactTokensForETH expression , expression , expression , expression , expression uint256 primaryExpression expressionList expression . identifier nameValue identifier controller _commitAmount 0 identifier msg address primaryExpression identifier ICEth primaryExpression _commitAmount identifier controller _uncommitAmount 0 identifier redeemResult 0 this IWETH primaryExpression ethBalance identifier msg 
0 owner _msgSender 0 address primaryExpression c a primaryExpression primaryExpression primaryExpression identifier stringLiteral primaryExpression expression ( functionCallArguments ) identifier identifier primaryExpression expression ( functionCallArguments ) identifier identifier stringLiteral address primaryExpression address primaryExpression address primaryExpression numberLiteral 0 address primaryExpression numberLiteral 0 address primaryExpression address primaryExpression abi expression . identifier selector identifier identifier abi expression . identifier selector identifier identifier identifier identifier numberLiteral expression . identifier expressionList numberLiteral abi expression . identifier selector identifier identifier identifier expression spender abi expression . identifier selector identifier identifier identifier expression spender abi expression . identifier selector identifier identifier token require expression ( functionCallArguments ) primaryExpression identifier expression identifier expression identifier identifier identifier returndata { assemblyItem assemblyItem } expression ; msg tx cEth identifier comptroller identifier comp identifier primaryExpression expressionList primaryExpression primaryExpression address elementaryTypeName primaryExpression identifier numberLiteral comp identifier numberLiteral weth primaryExpression expressionList primaryExpression expression ( functionCallArguments ) primaryExpression expression ( functionCallArguments ) expression ( functionCallArguments ) identifier expression expression ( functionCallArguments ) mint identifier : expression msg weth identifier weth identifier msg cEth identifier weth 
numberLiteral identifier identifier identifier amount "ERC20: transfer amount exceeds allowance" identifier primaryExpression spender addedValue identifier primaryExpression spender subtractedValue "ERC20: decreased allowance below zero" numberLiteral numberLiteral numberLiteral 0 numberLiteral 0 numberLiteral numberLiteral primaryExpression transfer to value primaryExpression transferFrom from to value value 0 primaryExpression allowance expression , expression 0 primaryExpression approve spender value address primaryExpression primaryExpression approve spender newAllowance address primaryExpression primaryExpression approve spender newAllowance expression . identifier expressionList stringLiteral address primaryExpression address primaryExpression target target target assemblyLocalDefinition assemblyExpression expression ( functionCallArguments ) this this this identifier expression identifier identifier address numberLiteral paths 0 paths 1 identifier expression identifier primaryExpression expressionList identifier primaryExpression expressionList expression . identifier expressionList address primaryExpression primaryExpression expressionList value primaryExpression this cEth weth 
0 _allowances sender _msgSender _allowances identifier _allowances identifier 0 0 0 0 0 0 identifier identifier identifier expression ( functionCallArguments ) primaryExpression identifier identifier identifier identifier identifier primaryExpression decode expression , expression "SafeERC20: ERC20 operation did not succeed" identifier identifier let assemblyIdentifierList := assemblyExpression assemblyCall primaryExpression expressionList IERC20 primaryExpression uniswap compBalance 2 IUniswapV2 primaryExpression compBalance typeNameExpression expression paths identifier expression expression . identifier add expression identifier identifier expression identifier 
_msgSender _msgSender token token token primaryExpression expressionList identifier token this token this token identifier primaryExpression ( expression ) this this identifier assemblyCall identifier ( assemblyExpression , assemblyExpression ) identifier expression identifier identifier elementaryTypeName primaryExpression address primaryExpression primaryExpression timestamp primaryExpression this ICEth primaryExpression obtainedEthAmount 
identifier expression spender abi identifier primaryExpression returndata_size identifier ( assemblyExpression ) revert assemblyCall assemblyCall revert primaryExpression comp uniswap uint256 numberLiteral identifier identifier numberLiteral identifier 
address primaryExpression returndata typeNameExpression mload assemblyCall identifier ( assemblyExpression , assemblyExpression ) identifier identifier 0 this block 1800 cEth 
identifier elementaryTypeName identifier add assemblyLiteral assemblyCall returndata_size errorMessage 
this bool returndata 32 identifier 
returndata 

